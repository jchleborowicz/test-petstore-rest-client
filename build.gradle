plugins {
    id 'java'
    id "org.openapi.generator" version "4.3.1"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

def petstoreApiYml = "$rootDir/src/main/resources/petstore-api.yaml".toString()

/* java client configuration */
task buildPetStoreJavaClient(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    generatorName = "java"
    inputSpec = petstoreApiYml
    outputDir = "$buildDir/java-client".toString()

    groupId = "$project.group"
    id = "$project.name-java-client"
    version = "$project.version"
    apiPackage = "com.petstore.api"
    invokerPackage = "com.petstore.api.invoker"
    modelPackage = "com.petstore.api.model"
    enablePostProcessFile = true
    skipOverwrite = false
    configOptions = [
            java8               : "true",
            dateLibrary         : "java8",
            serializationLibrary: "jackson",
            library             : "resttemplate",
            useBeanValidation   : "true",
            enableBuilderSupport: "true"
    ]
    systemProperties = [
            modelDocs: "true"
    ]
}

task generateCode(type: Copy, dependsOn: ['buildPetStoreJavaClient']) {

    def srcPath = "$buildDir/java-client"
    def targetPath = "$rootDir/docs"

    // copy docs
    from(srcPath + "/docs")
    into(targetPath)
    include('*.md')
}

// code will be generated during compilation
compileJava.dependsOn(generateCode)


// attach the generated folder as source for this project
sourceSets {
    main {
        java {
            srcDir "$buildDir/java-client/src/main/java"
        }
    }
}
